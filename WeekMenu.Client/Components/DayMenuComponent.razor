@inject Weekhelper _helper

<div class="p-3"><h3>Week Menu Generator</h3></div>

<div class="container-fluid d-none d-lg-block">
    <table class="table table-sm table-striped">
        <thead>
            <tr class="bg-dark text-white">
                <td>Day</td>       
                <td>Breakfast</td>       
                <td>Second Breakfast</td> 
                <td>Lunch</td>       
                <td>Afternnon Tea</td>
                <td>Dinner</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in sevenDays)
            {
                TodayClass = item.DayMenuDate.Date == DateTime.Now.Date? "font-weight-bold" : "";

                <tr class="@TodayClass">
                    <td>@item.DayMenuDate.DayOfWeek</td>
                    <td style="cursor: pointer" @onclick="()=>selectRecipe(item.Breakfast)">@NameTrimer(item.Breakfast.RecipeName)</td>
                    <td style="cursor: pointer" @onclick="()=>selectRecipe(item.SecondBreakfast)">@NameTrimer(item.SecondBreakfast.RecipeName)</td>
                    <td style="cursor: pointer" @onclick="()=>selectRecipe(item.Lunch)">@NameTrimer(item.Lunch.RecipeName)</td>
                    <td style="cursor: pointer" @onclick="()=>selectRecipe(item.AfternoonTea)">@NameTrimer(item.AfternoonTea.RecipeName)</td>
                    <td style="cursor: pointer" @onclick="()=>selectRecipe(item.Dinner)">@NameTrimer(item.Dinner.RecipeName)</td>                    
                </tr>
            }
            </tbody>
    </table>
</div>
<div class="container d-lg-none">
    
    <table class="table table-sm table-striped">
        <thead>
            <tr>@TodayMenu.DayMenuDate.Date.ToString("dddd, dd MMMM yyyy")</tr>
            <tr class="bg-dark text-white">
                <td>Meal</td>
                <td>Recipe</td>
            </tr>
        </thead>
        <tbody>
            <tr class="">
                <td>Breakfast</td>
                <td style="cursor: pointer" @onclick="()=>selectRecipe(TodayMenu.Breakfast)">@NameTrimer(TodayMenu.Breakfast.RecipeName)</td>
            </tr>
            <tr>
                <td>Second Breakfast</td>
                <td style="cursor: pointer" @onclick="()=>selectRecipe(TodayMenu.SecondBreakfast)">@NameTrimer(TodayMenu.SecondBreakfast.RecipeName)</td>
            </tr>
            <tr>
                <td>Lunch</td>
                <td style="cursor: pointer" @onclick="()=>selectRecipe(TodayMenu.Lunch)">@NameTrimer(TodayMenu.Lunch.RecipeName)</td>
            </tr>
            <tr>
                <td>Afternoon Tea</td>
                <td style="cursor: pointer" @onclick="()=>selectRecipe(TodayMenu.AfternoonTea)">@NameTrimer(TodayMenu.AfternoonTea.RecipeName)</td>
            </tr>
            <tr>
                <td>Dinner</td>
                <td style="cursor: pointer" @onclick="()=>selectRecipe(TodayMenu.Dinner)">@NameTrimer(TodayMenu.Dinner.RecipeName)</td>
            </tr>            
        </tbody>
    </table>

</div>

<ShowRecipe recipeParameter="selectedRecipe"/>

@code {
    DateTime today = DateTime.Now;

    //DayMenuModel day = new DayMenuModel();

    RecipeModel selectedRecipe = new RecipeModel();

    List<DayMenuModel> sevenDays = new List<DayMenuModel>();

    DayMenuModel TodayMenu = new DayMenuModel();
    //string nameOfDay = string.Empty;

    string TodayClass = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        //nameOfDay = today.DayOfWeek.ToString();
        sevenDays = await _helper.CreateSevenDays(today);
        TodayMenu = sevenDays.Where(x => x.DayMenuDate.Date == DateTime.Now.Date).FirstOrDefault();

    }

    void selectRecipe(RecipeModel recipe)
    {
        selectedRecipe = recipe;
    }

    string NameTrimer(string name)
    {
        if (name.Length > 15)
        {
            name = $"{name.Substring(0, 15)}...";
        }
        return name;
    }




}
