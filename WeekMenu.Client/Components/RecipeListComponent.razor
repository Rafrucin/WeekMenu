@page "/recipes"
@inject IRecipeService _recipeService
@inject NavigationManager _navManager

<h3>Recipes</h3>

<h2>@status</h2>


<div class="container">
    <div class="row">
        @foreach (var item in recipes)
        {
            <div class="card m-2" style="width: 13rem; cursor: pointer;" @onclick="()=>GoToEditRecipe(item.RecipeModelID)" >
                <img class="card-img-top" style="height: 13rem; object-fit: cover;" src="@ShowImage(item)" alt="Card image cap">
                <div class="card-body">
                    <p class="card-text">@item.RecipeName</p>
                </div>
            </div>
        }
    </div>
</div>


@code {        

    List<RecipeModel> recipes = new List<RecipeModel>();
    string status = "Loading...";

    void GoToEditRecipe(int id)
    {
        _navManager.NavigateTo($"/recipe/{id}");
    }


    protected async override Task OnInitializedAsync()
    {
        recipes = await _recipeService.GetRecipes();
        if (recipes.Count==0)
        {
            status = "No recipes";
        }
        else
        {
            status = "done";
        }
    }

    string ShowImage(RecipeModel model)
    {
        if (string.IsNullOrWhiteSpace(model.RecipeImageName) == false)
        {
            var fileExtension = model.RecipeImageName.Split('.');
            return $"data:image/{fileExtension[fileExtension.Length - 1]};base64, {Convert.ToBase64String(model.RecipeImageFile)}";
        }
        return "/Images/noImage.png";
    }

}
